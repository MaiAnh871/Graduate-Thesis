Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    bc660k.o(.text.BC660K_USART0_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    bc660k.o(.text.BC660K_USART0_Configuration) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    bc660k.o(.text.BC660K_USART0_Configuration) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    bc660k.o(.text.BC660K_USART0_Configuration) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    bc660k.o(.text.BC660K_USART0_Configuration) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    bc660k.o(.ARM.exidx.text.BC660K_USART0_Configuration) refers to bc660k.o(.text.BC660K_USART0_Configuration) for [Anonymous Symbol]
    bc660k.o(.text.BC660K_USART0_Send_Char) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    bc660k.o(.text.BC660K_USART0_Send_Char) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for USART_SendData
    bc660k.o(.ARM.exidx.text.BC660K_USART0_Send_Char) refers to bc660k.o(.text.BC660K_USART0_Send_Char) for [Anonymous Symbol]
    bc660k.o(.text.BC660K_USART0_Send) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    bc660k.o(.text.BC660K_USART0_Send) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for USART_SendData
    bc660k.o(.text.BC660K_USART0_Send) refers to strlen.o(.text) for strlen
    bc660k.o(.ARM.exidx.text.BC660K_USART0_Send) refers to bc660k.o(.text.BC660K_USART0_Send) for [Anonymous Symbol]
    bc660k.o(.text.BC660K_USART0_Receive) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    bc660k.o(.text.BC660K_USART0_Receive) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    bc660k.o(.text.BC660K_USART0_Receive) refers to strstr.o(.text) for strstr
    bc660k.o(.ARM.exidx.text.BC660K_USART0_Receive) refers to bc660k.o(.text.BC660K_USART0_Receive) for [Anonymous Symbol]
    bc660k.o(.text.BC660K_Send_Command) refers to printf3.o(i.__0sprintf$3) for __2sprintf
    bc660k.o(.text.BC660K_Send_Command) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    bc660k.o(.text.BC660K_Send_Command) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for USART_SendData
    bc660k.o(.text.BC660K_Send_Command) refers to strlen.o(.text) for strlen
    bc660k.o(.text.BC660K_Send_Command) refers to memcpya.o(.text) for __aeabi_memcpy
    bc660k.o(.ARM.exidx.text.BC660K_Send_Command) refers to bc660k.o(.text.BC660K_Send_Command) for [Anonymous Symbol]
    bc660k.o(.ARM.exidx.text.BC660K_Clear_Receive_Buffer) refers to bc660k.o(.text.BC660K_Clear_Receive_Buffer) for [Anonymous Symbol]
    main.o(.text.task_1) refers to board871.o(.text.Toggle_LED_1) for Toggle_LED_1
    main.o(.text.task_1) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.task_1) refers to main.o(.text.task_1) for [Anonymous Symbol]
    main.o(.text.task_2) refers to board871.o(.text.Toggle_LED_2) for Toggle_LED_2
    main.o(.text.task_2) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.task_2) refers to main.o(.text.task_2) for [Anonymous Symbol]
    main.o(.text.task_3) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.task_3) refers to main.o(.text.task_3) for [Anonymous Symbol]
    main.o(.text.task_4) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.task_4) refers to main.o(.text.task_4) for [Anonymous Symbol]
    main.o(.text.main) refers to system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.text.main) refers to main.o(.text.task_1) for task_1
    main.o(.text.main) refers to main.o(.text.task_2) for task_2
    main.o(.text.main) refers to main.o(.text.task_3) for task_3
    main.o(.text.main) refers to main.o(.text.task_4) for task_4
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    board871.o(.text.LED_Init) refers to ht32_board.o(.text.HT32F_DVB_LEDInit) for HT32F_DVB_LEDInit
    board871.o(.text.LED_Init) refers to ht32_board.o(.text.HT32F_DVB_LEDOff) for HT32F_DVB_LEDOff
    board871.o(.ARM.exidx.text.LED_Init) refers to board871.o(.text.LED_Init) for [Anonymous Symbol]
    board871.o(.text.Toggle_LED_1) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for HT32F_DVB_LEDToggle
    board871.o(.ARM.exidx.text.Toggle_LED_1) refers to board871.o(.text.Toggle_LED_1) for [Anonymous Symbol]
    board871.o(.text.Toggle_LED_2) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for HT32F_DVB_LEDToggle
    board871.o(.ARM.exidx.text.Toggle_LED_2) refers to board871.o(.text.Toggle_LED_2) for [Anonymous Symbol]
    board871.o(.text.Toggle_LED_3) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for HT32F_DVB_LEDToggle
    board871.o(.ARM.exidx.text.Toggle_LED_3) refers to board871.o(.text.Toggle_LED_3) for [Anonymous Symbol]
    board871.o(.text.Initialize_Log) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    board871.o(.text.Initialize_Log) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    board871.o(.text.Initialize_Log) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    board871.o(.text.Initialize_Log) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    board871.o(.text.Initialize_Log) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    board871.o(.ARM.exidx.text.Initialize_Log) refers to board871.o(.text.Initialize_Log) for [Anonymous Symbol]
    board871.o(.text.Write_Char_Log) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    board871.o(.text.Write_Char_Log) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for USART_SendData
    board871.o(.ARM.exidx.text.Write_Char_Log) refers to board871.o(.text.Write_Char_Log) for [Anonymous Symbol]
    board871.o(.text.Write_String_Log) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    board871.o(.text.Write_String_Log) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for USART_SendData
    board871.o(.text.Write_String_Log) refers to strlen.o(.text) for strlen
    board871.o(.ARM.exidx.text.Write_String_Log) refers to board871.o(.text.Write_String_Log) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    startup_ht32f5xxxx_03.o(RESET) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    startup_ht32f5xxxx_03.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for SystemInit
    startup_ht32f5xxxx_03.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for USBD_Init
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init) refers to ht32_usbd_core.o(.text.USBDCore_Init) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for USBD_GetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for USBD_ClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for USBD_PowerOff
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for USBD_DeInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for USBD_EPTInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for USBD_EnableINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for USBD_EPTGetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for USBD_ReadSETUPData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for USBD_EPTClearHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for USBD_EPTClearDTG
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for USBD_EPTGetBufferLen
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for USBD_EPTSendSTALL
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for USBD_EPTClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for USBD_EPTReadOUTData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for USBD_GetEPTnINTNumber
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for USBD_EPTGetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for USBD_EPTSetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for USBD_SetAddress
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler) refers to ht32_usbd_core.o(.text.USBDCore_IRQHandler) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_MainRoutine) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for USBD_PowerUp
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine) refers to ht32_usbd_core.o(.text.USBDCore_MainRoutine) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend) refers to ht32_usbd_core.o(.text.USBDCore_IsSuspend) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature) refers to ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for USBD_RemoteWakeup
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup) refers to ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.data.Data) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.SDIV32) for SDIV32
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.UDIV32) for UDIV32
    ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.text.DIV32_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData2) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.bss.Rand_Get) for Rand_Get
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init) refers to ht32_cm0plus_misc.o(.text.Rand_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig) refers to ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler) refers to ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd) refers to ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue) refers to ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT) refers to ht32_cm0plus_misc.o(.text.RBIT) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.text.ADC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ht32f5xxxx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset) refers to ht32f5xxxx_adc.o(.text.ADC_Reset) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ht32f5xxxx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig) refers to ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData) refers to ht32f5xxxx_adc.o(.text.ADC_GetConversionData) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig) refers to ht32f5xxxx_adc.o(.text.ADC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit) refers to ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig) refers to ht32f5xxxx_adc.o(.text.ADC_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd) refers to ht32f5xxxx_adc.o(.text.ADC_VREFCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig) refers to ht32f5xxxx_adc.o(.text.ADC_VREFConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd) refers to ht32f5xxxx_adc.o(.text.ADC_MVDDACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AES_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit) refers to ht32f5xxxx_aes.o(.text.AES_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush) refers to ht32f5xxxx_aes.o(.text.AES_FIFOFlush) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd) refers to ht32f5xxxx_aes.o(.text.AES_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey) refers to ht32f5xxxx_aes.o(.text.AES_StartKey) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init) refers to ht32f5xxxx_aes.o(.text.AES_ECB_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig) refers to ht32f5xxxx_aes.o(.text.AES_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init) refers to ht32f5xxxx_aes.o(.text.AES_CBC_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init) refers to ht32f5xxxx_aes.o(.text.AES_CTR_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd) refers to ht32f5xxxx_aes.o(.text.AES_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData) refers to ht32f5xxxx_aes.o(.text.AES_SetInputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData) refers to ht32f5xxxx_aes.o(.text.AES_GetOutputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable) refers to ht32f5xxxx_aes.o(.text.AES_SetKeyTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable) refers to ht32f5xxxx_aes.o(.text.AES_SetVectorTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.text._AES_CryptData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputIndex) for gu32InputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.text.BFTM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit) refers to ht32f5xxxx_bftm.o(.text.BFTM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig) refers to ht32f5xxxx_bftm.o(.text.BFTM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag) refers to ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit) refers to ht32f5xxxx_cmp.o(.text.CMP_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init) refers to ht32f5xxxx_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to ht32f5xxxx_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd) refers to ht32f5xxxx_cmp.o(.text.CMP_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag) refers to ht32f5xxxx_cmp.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue) refers to ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.text.CRC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to ht32f5xxxx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init) refers to ht32f5xxxx_crc.o(.text.CRC_Init) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process) refers to ht32f5xxxx_crc.o(.text.CRC_Process) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT) refers to ht32f5xxxx_crc.o(.text.CRC_CCITT) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16) refers to ht32f5xxxx_crc.o(.text.CRC_16) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32) refers to ht32f5xxxx_crc.o(.text.CRC_32) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.text.DAC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit) refers to ht32f5xxxx_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd) refers to ht32f5xxxx_dac.o(.text.DAC_OutBufCmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd) refers to ht32f5xxxx_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData) refers to ht32f5xxxx_dac.o(.text.DAC_SetData) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData) refers to ht32f5xxxx_dac.o(.text.DAC_GetOutData) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit) refers to ht32f5xxxx_div.o(.text.DIV_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32) refers to ht32f5xxxx_div.o(.text.DIV_Div32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.text.DIV_uDiv32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod) refers to ht32f5xxxx_div.o(.text.DIV_Mod) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero) refers to ht32f5xxxx_div.o(.text.DIV_IsDivByZero) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.text.EBI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit) refers to ht32f5xxxx_ebi.o(.text.EBI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit) refers to ht32f5xxxx_ebi.o(.text.EBI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus) refers to ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ht32f5xxxx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd) refers to ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState) refers to ht32f5xxxx_flash.o(.text.FLASH_SetWaitState) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode) refers to ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ht32f5xxxx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd) refers to ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase) refers to ht32f5xxxx_flash.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig) refers to ht32f5xxxx_flash.o(.text.FLASH_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag) refers to ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.GPIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock) refers to ht32f5xxxx_gpio.o(.text.GPIO_PinLock) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID) refers to ht32f5xxxx_gpio.o(.text.GPIO_GetID) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.AFIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._GPIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._AFIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to ht32f5xxxx_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to ht32f5xxxx_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress) refers to ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to ht32f5xxxx_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer) refers to ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.text.I2S_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit) refers to ht32f5xxxx_i2s.o(.text.I2S_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init) refers to ht32f5xxxx_i2s.o(.text.I2S_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd) refers to ht32f5xxxx_i2s.o(.text.I2S_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd) refers to ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd) refers to ht32f5xxxx_i2s.o(.text.I2S_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag) refers to ht32f5xxxx_i2s.o(.text.I2S_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.text.PDMA_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit) refers to ht32f5xxxx_pdma.o(.text.PDMA_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag) refers to ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ht32f5xxxx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd) refers to ht32f5xxxx_rtc.o(.text.RTC_LSECmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd) refers to ht32f5xxxx_rtc.o(.text.RTC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_OutConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_OutCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.text.SCI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit) refers to ht32f5xxxx_sci.o(.text.SCI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init) refers to ht32f5xxxx_sci.o(.text.SCI_Init) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit) refers to ht32f5xxxx_sci.o(.text.SCI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd) refers to ht32f5xxxx_sci.o(.text.SCI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ETUConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd) refers to ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData) refers to ht32f5xxxx_sci.o(.text.SCI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData) refers to ht32f5xxxx_sci.o(.text.SCI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd) refers to ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO) refers to ht32f5xxxx_sci.o(.text.SCI_OutputDIO) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig) refers to ht32f5xxxx_sci.o(.text.SCI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus) refers to ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag) refers to ht32f5xxxx_sci.o(.text.SCI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd) refers to ht32f5xxxx_sci.o(.text.SCI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit) refers to ht32f5xxxx_spi.o(.text.SPI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to ht32f5xxxx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue) refers to ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag) refers to ht32f5xxxx_spi.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELHTConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.text.TM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHPSCConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit) refers to ht32f5xxxx_tm.o(.text.TM_PwmInputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig) refers to ht32f5xxxx_tm.o(.text.TM_StiConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig) refers to ht32f5xxxx_tm.o(.text.TM_PrescalerConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_CounterModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig) refers to ht32f5xxxx_tm.o(.text.TM_DecoderConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF) refers to ht32f5xxxx_tm.o(.text.TM_ForcedOREF) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearOREFConfig) refers to ht32f5xxxx_tm.o(.text.TM_ClearOREFConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig) refers to ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_OutputModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd) refers to ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd) refers to ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig) refers to ht32f5xxxx_tm.o(.text.TM_MMSELConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd) refers to ht32f5xxxx_tm.o(.text.TM_TimSyncCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter) refers to ht32f5xxxx_tm.o(.text.TM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload) refers to ht32f5xxxx_tm.o(.text.TM_SetCounterReload) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig) refers to ht32f5xxxx_tm.o(.text.TM_CKDIVConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter) refers to ht32f5xxxx_tm.o(.text.TM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler) refers to ht32f5xxxx_tm.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent) refers to ht32f5xxxx_tm.o(.text.TM_GenerateEvent) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit) refers to ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_InternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig) refers to ht32f5xxxx_tm.o(.text.TM_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit) refers to ht32f5xxxx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init) refers to ht32f5xxxx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit) refers to ht32f5xxxx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to ht32f5xxxx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd) refers to ht32f5xxxx_usart.o(.text.USART_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd) refers to ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd) refers to ht32f5xxxx_usart.o(.text.USART_StickParityCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig) refers to ht32f5xxxx_usart.o(.text.USART_StickParityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to ht32f5xxxx_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig) refers to ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue) refers to ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset) refers to ht32f5xxxx_usart.o(.text.USART_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd) refers to ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler) refers to ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig) refers to ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485AADCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue) refers to ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockStructInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit) refers to ht32f5xxxx_usbd.o(.text.USBD_PreInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.bss.gIsFirstPowered) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReset) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.text.WDT_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit) refers to ht32f5xxxx_wdt.o(.text.WDT_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd) refers to ht32f5xxxx_wdt.o(.text.WDT_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_HaltConfig) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ResetCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart) refers to ht32f5xxxx_wdt.o(.text.WDT_Restart) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus) refers to ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_LockCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_SourceConfig) for [Anonymous Symbol]
    ht32_retarget.o(.text.RETARGET_Configuration) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for HT32F_DVB_COMInit
    ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration) refers to ht32_retarget.o(.text.RETARGET_Configuration) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text.__backspace) refers to ht32_retarget.o(.text.__backspace) for [Anonymous Symbol]
    ht32_retarget.o(.text.fputc) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text.fputc) refers to ht32_retarget.o(.text.fputc) for [Anonymous Symbol]
    ht32_retarget.o(.text.fgetc) refers to ht32_serial.o(.text.SERIAL_GetChar) for SERIAL_GetChar
    ht32_retarget.o(.ARM.exidx.text.fgetc) refers to ht32_retarget.o(.text.fgetc) for [Anonymous Symbol]
    ht32_retarget.o(.text._ttywrch) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text._ttywrch) refers to ht32_retarget.o(.text._ttywrch) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text._sys_exit) refers to ht32_retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar) refers to ht32_serial.o(.text.SERIAL_PutChar) for [Anonymous Symbol]
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar) refers to ht32_serial.o(.text.SERIAL_GetChar) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.LED_GPIO_ID) for LED_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.LED_AFIO_MODE) for LED_AFIO_MODE
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.text.HT32F_DVB_LEDInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.rodata.LED_GPIO_ID) for LED_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.text.HT32F_DVB_LEDOff) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.rodata.LED_GPIO_ID) for LED_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.text.HT32F_DVB_LEDOn) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.rodata.LED_GPIO_ID) for LED_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for GPIO_InputConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for AFIO_EXTISourceConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for EXTI_Init
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for EXTI_IntConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_ID) for BUTTON_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_AFIO_MODE) for BUTTON_AFIO_MODE
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PINNum) for BUTTON_GPIO_PINNum
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn) for gEXTIn_IRQn
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit) refers to ht32_board.o(.text.HT32F_DVB_PBInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for GPIO_ReadInBit
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.rodata.BUTTON_GPIO_ID) for BUTTON_GPIO_ID
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.text.HT32F_DVB_PBGetState) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for CKCU_GetClocksFrequency
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for TM_UpdateCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for TM_DeInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for TM_TimeBaseStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for TM_TimeBaseInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for TM_ClearFlag
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for TM_OutputStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for TM_OutputInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for TM_CHCCRPreloadConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for TM_CRRPreloadCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for TM_Cmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun) refers to ht32_board.o(.text.HT32F_DVB_BuzzerFun) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for TM_ChannelConfig
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for EBI_Init
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for EBI_Cmd
    ebi_lcd.o(.text.LCD_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Init) refers to ebi_lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Config) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    ebi_lcd.o(.text.LCD_Config) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    ebi_lcd.o(.text.LCD_Config) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Config) refers to ebi_lcd.o(.text.LCD_Config) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg) refers to ebi_lcd.o(.text.LCD_WriteReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_Clear) refers to ebi_lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg) refers to ebi_lcd.o(.text.LCD_ReadReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet) refers to ebi_lcd.o(.text.LCD_StarterSet) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior) refers to ebi_lcd.o(.text.LCD_WriteRAMPrior) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM) refers to ebi_lcd.o(.text.LCD_WriteRAM) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_BackColorSet) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet) refers to ebi_lcd.o(.text.LCD_BackColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_TextColorSet) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet) refers to ebi_lcd.o(.text.LCD_TextColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.rodata.ASCII_Font_Table) for ASCII_Font_Table
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw) refers to ebi_lcd.o(.text.LCD_CharDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff) refers to ebi_lcd.o(.text.LCD_DisplayOff) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn) refers to ebi_lcd.o(.text.LCD_DisplayOn) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for LCD_CharDisplay
    ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_StringLineDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_LineDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw) refers to ebi_lcd.o(.text.LCD_LineDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord) refers to ebi_lcd.o(.text.LCD_WriteRAMWord) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CircleDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw) refers to ebi_lcd.o(.text.LCD_CircleDraw) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_RectDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw) refers to ebi_lcd.o(.text.LCD_RectDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw) refers to ebi_lcd.o(.text.LCD_PicDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea) refers to ebi_lcd.o(.text.LCD_SetDisplayArea) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for I2C_Init
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init) refers to i2c_eeprom.o(.text.I2C_EEPROM_Init) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling) refers to i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for I2C_EEPROM_PageWrite
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for I2C_AckCmd
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for I2C_ReceiveData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for SPI_Init
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for SPI_SELOutputCmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init) refers to spi_flash.o(.text.SPI_FLASH_Init) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_SectorErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte) refers to spi_flash.o(.text.SPI_FLASH_SendByte) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_BlockErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_ChipErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_PageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy) refers to spi_flash.o(.text.SPI_FLASH_BufferWriteBy) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead) refers to spi_flash.o(.text.SPI_FLASH_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead) refers to spi_flash.o(.text.SPI_FLASH_BufferDualRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID) refers to spi_flash.o(.text.SPI_FLASH_ReadJEDECID) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus2) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable) refers to spi_flash.o(.text.SPI_FLASH_WriteDisable) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortStartFirstTask) for vPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.text.vPortStartFirstTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.vPortStartFirstTask) refers to port.o(.text.vPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortYield) refers to port.o(.text.vPortYield) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vClearInterruptMaskFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to llmul.o(.text) for __aeabi_lmul
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to llmul.o(.text) for __aeabi_lmul
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to llmul.o(.text) for __aeabi_lmul
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericSend) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueuePeekFromISR) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskDelayUntil) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskDelay) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList1) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList2) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to port.o(.text.vPortYield) for vPortYield
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList1) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList2) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing bc660k.o(.text), (0 bytes).
    Removing bc660k.o(.text.BC660K_USART0_Configuration), (104 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_USART0_Configuration), (8 bytes).
    Removing bc660k.o(.text.BC660K_USART0_Send_Char), (30 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_USART0_Send_Char), (8 bytes).
    Removing bc660k.o(.text.BC660K_USART0_Send), (60 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_USART0_Send), (8 bytes).
    Removing bc660k.o(.text.BC660K_USART0_Receive), (116 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_USART0_Receive), (8 bytes).
    Removing bc660k.o(.text.BC660K_Send_Command), (268 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_Send_Command), (8 bytes).
    Removing bc660k.o(.text.BC660K_Clear_Receive_Buffer), (82 bytes).
    Removing bc660k.o(.ARM.exidx.text.BC660K_Clear_Receive_Buffer), (8 bytes).
    Removing lc76f.o(.text), (0 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.task_1), (8 bytes).
    Removing main.o(.ARM.exidx.text.task_2), (8 bytes).
    Removing main.o(.ARM.exidx.text.task_3), (8 bytes).
    Removing main.o(.ARM.exidx.text.task_4), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.check), (4 bytes).
    Removing main.o(.bss.Ax), (2 bytes).
    Removing main.o(.bss.Ay), (2 bytes).
    Removing main.o(.bss.Az), (2 bytes).
    Removing main.o(.bss.utick), (4 bytes).
    Removing main.o(.bss.data), (100 bytes).
    Removing main.o(.bss.GPS_raw), (100 bytes).
    Removing main.o(.bss.latitude), (4 bytes).
    Removing main.o(.bss.longitude), (4 bytes).
    Removing main.o(.bss.current_lat), (4 bytes).
    Removing main.o(.bss.current_lon), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing mc3416.o(.text), (0 bytes).
    Removing board871.o(.text), (0 bytes).
    Removing board871.o(.text.LED_Init), (46 bytes).
    Removing board871.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing board871.o(.ARM.exidx.text.Toggle_LED_1), (8 bytes).
    Removing board871.o(.ARM.exidx.text.Toggle_LED_2), (8 bytes).
    Removing board871.o(.text.Toggle_LED_3), (10 bytes).
    Removing board871.o(.ARM.exidx.text.Toggle_LED_3), (8 bytes).
    Removing board871.o(.text.Initialize_Log), (108 bytes).
    Removing board871.o(.ARM.exidx.text.Initialize_Log), (8 bytes).
    Removing board871.o(.text.Write_Char_Log), (36 bytes).
    Removing board871.o(.ARM.exidx.text.Write_Char_Log), (8 bytes).
    Removing board871.o(.text.Write_String_Log), (60 bytes).
    Removing board871.o(.ARM.exidx.text.Write_String_Log), (8 bytes).
    Removing system_ht32f5xxxx_03.o(.text), (0 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing startup_ht32f5xxxx_03.o(HEAP), (0 bytes).
    Removing ht32_usbd_core.o(.text), (0 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_Init), (28 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_IRQHandler), (1108 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_MainRoutine), (62 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_IsSuspend), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature), (10 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_GetStatus), (16 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus), (8 bytes).
    Removing ht32_usbd_core.o(.bss.pUSBCore), (4 bytes).
    Removing ht32_cm0plus_misc.o(.text), (0 bytes).
    Removing ht32_cm0plus_misc.o(.text.DIV32_Init), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.Rand_Init), (32 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable), (20 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler), (16 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd), (44 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig), (24 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue), (12 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.RBIT), (192 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT), (8 bytes).
    Removing ht32_cm0plus_misc.o(.data.Data), (348 bytes).
    Removing ht32_cm0plus_misc.o(.bss.UDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.bss.SDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData), (308 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData2), (36 bytes).
    Removing ht32_cm0plus_misc.o(.bss.Rand_Get), (4 bytes).
    Removing ht32f5xxxx_adc.o(.text), (0 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_DeInit), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Reset), (10 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Cmd), (18 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig), (36 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig), (28 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig), (14 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig), (4 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetConversionData), (10 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_IntConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetIntStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit), (6 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDConfig), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_PDMAConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFCmd), (20 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_MVDDACmd), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text), (0 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_DeInit), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_FIFOFlush), (24 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_Cmd), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_StartKey), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_ECB_Init), (56 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_IntConfig), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CBC_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CTR_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetStatus), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetInputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetOutputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetKeyTable), (108 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetVectorTable), (18 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text._AES_CryptData), (152 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AESCore_IRQHandler), (112 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler), (8 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32OutputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputSize), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32InputBuff), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32OutputBuff), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.text), (0 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_DeInit), (44 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_IntConfig), (16 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag), (14 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_DeInit), (292 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig), (176 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady), (124 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit), (52 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit), (40 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler), (12 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency), (136 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency), (68 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler), (40 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency), (156 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig), (56 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd), (32 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text), (0 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_DeInit), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig), (12 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Init), (60 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_StructInit), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Cmd), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_IntConfig), (20 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig), (26 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_ClearFlag), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue), (4 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text), (0 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_DeInit), (16 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Init), (40 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Process), (90 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_CCITT), (116 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_16), (116 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_32), (112 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text), (0 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_DeInit), (16 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ModeConfig), (12 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig), (24 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig), (24 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_OutBufCmd), (32 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_Cmd), (28 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_SetData), (12 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_GetOutData), (16 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData), (8 bytes).
    Removing ht32f5xxxx_div.o(.text), (0 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_DeInit), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Div32), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uDiv32), (156 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder), (12 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Mod), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_IsDivByZero), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero), (8 bytes).
    Removing ht32f5xxxx_div.o(.bss.guRemainder), (4 bytes).
    Removing ht32f5xxxx_ebi.o(.text), (0 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_DeInit), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Init), (120 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_StructInit), (44 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Cmd), (32 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text), (0 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_DeInit), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_Init), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_IntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag), (20 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus), (36 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn), (16 bytes).
    Removing ht32f5xxxx_flash.o(.text), (0 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetWaitState), (44 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd), (24 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ErasePage), (272 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd), (260 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_MassErase), (268 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte), (1224 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus), (68 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_IntConfig), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text), (0 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DeInit), (60 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig), (38 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_InputConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig), (214 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_PinLock), (12 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_DeInit), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig), (380 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig), (44 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._GPIO_ClockControl), (52 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._AFIO_ClockControl), (44 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_DeInit), (40 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_Init), (164 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_StructInit), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_Cmd), (18 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_IntConfig), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd), (18 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_AckCmd), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig), (38 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ReadRegister), (22 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CheckStatus), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ClearFlag), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer), (6 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig), (128 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_DeInit), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Init), (120 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Cmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_PDMACmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOReset), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig), (40 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_IntConfig), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_ClearFlag), (12 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text), (0 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig), (26 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig), (48 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2), (14 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text), (0 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DeInit), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_Config), (48 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_IntConfig), (52 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd), (28 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd), (32 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus), (24 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit), (72 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed), (216 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep), (32 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1), (88 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2), (100 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex), (208 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown), (96 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS), (20 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus), (36 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd), (40 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig), (52 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag), (12 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset), (56 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text), (0 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_DeInit), (60 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSECmd), (84 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_Cmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCounter), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_IntConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutConfig), (56 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutCmd), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus), (16 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text), (0 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_DeInit), (32 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Init), (30 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_StructInit), (14 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Cmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ETUConfig), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SendData), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig), (22 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd), (22 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_OutputDIO), (22 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_IntConfig), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClearFlag), (28 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text), (0 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DeInit), (68 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Init), (70 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_StructInit), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Cmd), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd), (18 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetDataLength), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELModeConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd), (22 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SendData), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_IntConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus), (18 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_ClearFlag), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig), (40 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DUALCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_QuadCmd), (34 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELHTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text), (0 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DeInit), (112 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseInit), (68 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputInit), (176 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureInit), (80 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHPSCConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PwmInputInit), (192 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputStructInit), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureStructInit), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_Cmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig), (34 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_StiConfig), (26 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig), (120 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CounterModeConfig), (28 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DecoderConfig), (60 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ForcedOREF), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearOREFConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearOREFConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChannelConfig), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputModeConfig), (32 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UpdateCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_MMSELConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimSyncCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounterReload), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CKDIVConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetPrescaler), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GenerateEvent), (4 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearFlag), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_IntConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetIntStatus), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_InternalClockConfig), (12 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PDMAConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text), (0 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_DeInit), (112 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_Init), (140 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StructInit), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SendData), (4 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetIntStatus), (10 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IntConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_TxRxCmd), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityCmd), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityConfig), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDACmd), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAConfig), (22 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig), (22 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485AADCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockInit), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockStructInit), (12 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text), (0 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PreInit), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_Init), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DeInit), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerUp), (148 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EnableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerOff), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerOn), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull), (12 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_SetAddress), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_GetINT), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_ClearINT), (12 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber), (78 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTInit), (44 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReset), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt), (36 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent), (60 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr), (32 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr), (40 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount), (24 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData), (92 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text._USBD_CopyMemory), (706 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData), (116 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory), (100 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.bss.gIsFirstPowered), (1 bytes).
    Removing ht32f5xxxx_wdt.o(.text), (0 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_DeInit), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Cmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_HaltConfig), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ResetCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Restart), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_LockCmd), (36 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SourceConfig), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig), (8 bytes).
    Removing ht32_retarget.o(.text), (0 bytes).
    Removing ht32_retarget.o(.text.RETARGET_Configuration), (30 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration), (8 bytes).
    Removing ht32_retarget.o(.text.__backspace), (4 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing ht32_retarget.o(.text.fputc), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing ht32_retarget.o(.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.text._sys_exit), (2 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing ht32_serial.o(.text), (0 bytes).
    Removing ht32_serial.o(.text.SERIAL_PutChar), (44 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar), (8 bytes).
    Removing ht32_serial.o(.text.SERIAL_GetChar), (28 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar), (8 bytes).
    Removing ht32_board.o(.text), (0 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDInit), (144 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOff), (32 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOn), (32 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn), (8 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBInit), (252 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBGetState), (36 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_COMInit), (84 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerFun), (288 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd), (8 bytes).
    Removing ht32_board.o(.rodata.LED_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_ID), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PIN), (6 bytes).
    Removing ht32_board.o(.rodata.BUTTON_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PINNum), (3 bytes).
    Removing ht32_board.o(.rodata.gCOMInfo), (16 bytes).
    Removing ebi_lcd.o(.text), (0 bytes).
    Removing ebi_lcd.o(.text.LCD_Init), (364 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Config), (1256 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Config), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteReg), (16 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Clear), (180 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_ReadReg), (16 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StarterSet), (48 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMPrior), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAM), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_BackColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_TextColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDisplay), (352 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDraw), (280 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOff), (20 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOn), (20 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StringLineDisplay), (46 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_LineDraw), (596 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMWord), (20 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CircleDraw), (480 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_RectDraw), (1156 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_PicDraw), (316 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_SetDisplayArea), (88 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea), (8 bytes).
    Removing ebi_lcd.o(.rodata.ASCII_Font_Table), (4560 bytes).
    Removing ebi_lcd.o(.data.Color_Back), (2 bytes).
    Removing ebi_lcd.o(.bss.Color_Text), (2 bytes).
    Removing i2c_eeprom.o(.text), (0 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_Init), (84 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_PageWrite), (172 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite), (8 bytes).
    Removing i2c_eeprom.o(.text._I2C_EEPROM_AckPolling), (92 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite), (58 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferRead), (232 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead), (8 bytes).
    Removing spi_flash.o(.text), (0 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_Init), (172 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SectorErase), (208 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteEnable), (76 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SendByte), (52 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd), (128 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BlockErase), (208 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ChipErase), (84 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWriteByDMA), (436 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWrite), (264 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWrite), (308 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA), (488 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferWriteBy), (200 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferReadByDMA), (432 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferRead), (256 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualRead), (308 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA), (496 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadRead), (372 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA), (556 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ReadJEDECID), (208 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus), (128 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus2), (168 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteDisable), (76 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (24 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (24 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortYield), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.vClearInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (50 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (148 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (58 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (430 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (340 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (334 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (192 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (300 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (98 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (30 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (16 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (188 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (132 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (1572 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1144 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (204 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (284 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (76 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (72 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (104 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (156 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (92 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (40 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (32 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (12 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (26 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (40 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

1391 unused section(s) (total 54443 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/string/strstr.c         0x00000000   Number         0  strstr.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    BC660K.c                                 0x00000000   Number         0  bc660k.o ABSOLUTE
    Board871.c                               0x00000000   Number         0  board871.o ABSOLUTE
    LC76F.c                                  0x00000000   Number         0  lc76f.o ABSOLUTE
    MC3416.c                                 0x00000000   Number         0  mc3416.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    ebi_lcd.c                                0x00000000   Number         0  ebi_lcd.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    ht32_board.c                             0x00000000   Number         0  ht32_board.o ABSOLUTE
    ht32_cm0plus_misc.c                      0x00000000   Number         0  ht32_cm0plus_misc.o ABSOLUTE
    ht32_op.s                                0x00000000   Number         0  ht32_op.o ABSOLUTE
    ht32_retarget.c                          0x00000000   Number         0  ht32_retarget.o ABSOLUTE
    ht32_serial.c                            0x00000000   Number         0  ht32_serial.o ABSOLUTE
    ht32_usbd_core.c                         0x00000000   Number         0  ht32_usbd_core.o ABSOLUTE
    ht32f5xxxx_adc.c                         0x00000000   Number         0  ht32f5xxxx_adc.o ABSOLUTE
    ht32f5xxxx_aes.c                         0x00000000   Number         0  ht32f5xxxx_aes.o ABSOLUTE
    ht32f5xxxx_bftm.c                        0x00000000   Number         0  ht32f5xxxx_bftm.o ABSOLUTE
    ht32f5xxxx_ckcu.c                        0x00000000   Number         0  ht32f5xxxx_ckcu.o ABSOLUTE
    ht32f5xxxx_cmp.c                         0x00000000   Number         0  ht32f5xxxx_cmp.o ABSOLUTE
    ht32f5xxxx_crc.c                         0x00000000   Number         0  ht32f5xxxx_crc.o ABSOLUTE
    ht32f5xxxx_dac.c                         0x00000000   Number         0  ht32f5xxxx_dac.o ABSOLUTE
    ht32f5xxxx_div.c                         0x00000000   Number         0  ht32f5xxxx_div.o ABSOLUTE
    ht32f5xxxx_ebi.c                         0x00000000   Number         0  ht32f5xxxx_ebi.o ABSOLUTE
    ht32f5xxxx_exti.c                        0x00000000   Number         0  ht32f5xxxx_exti.o ABSOLUTE
    ht32f5xxxx_flash.c                       0x00000000   Number         0  ht32f5xxxx_flash.o ABSOLUTE
    ht32f5xxxx_gpio.c                        0x00000000   Number         0  ht32f5xxxx_gpio.o ABSOLUTE
    ht32f5xxxx_i2c.c                         0x00000000   Number         0  ht32f5xxxx_i2c.o ABSOLUTE
    ht32f5xxxx_i2s.c                         0x00000000   Number         0  ht32f5xxxx_i2s.o ABSOLUTE
    ht32f5xxxx_mctm.c                        0x00000000   Number         0  ht32f5xxxx_mctm.o ABSOLUTE
    ht32f5xxxx_pdma.c                        0x00000000   Number         0  ht32f5xxxx_pdma.o ABSOLUTE
    ht32f5xxxx_pwrcu.c                       0x00000000   Number         0  ht32f5xxxx_pwrcu.o ABSOLUTE
    ht32f5xxxx_rstcu.c                       0x00000000   Number         0  ht32f5xxxx_rstcu.o ABSOLUTE
    ht32f5xxxx_rtc.c                         0x00000000   Number         0  ht32f5xxxx_rtc.o ABSOLUTE
    ht32f5xxxx_sci.c                         0x00000000   Number         0  ht32f5xxxx_sci.o ABSOLUTE
    ht32f5xxxx_spi.c                         0x00000000   Number         0  ht32f5xxxx_spi.o ABSOLUTE
    ht32f5xxxx_tm.c                          0x00000000   Number         0  ht32f5xxxx_tm.o ABSOLUTE
    ht32f5xxxx_usart.c                       0x00000000   Number         0  ht32f5xxxx_usart.o ABSOLUTE
    ht32f5xxxx_usbd.c                        0x00000000   Number         0  ht32f5xxxx_usbd.o ABSOLUTE
    ht32f5xxxx_wdt.c                         0x00000000   Number         0  ht32f5xxxx_wdt.o ABSOLUTE
    i2c_eeprom.c                             0x00000000   Number         0  i2c_eeprom.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    spi_flash.c                              0x00000000   Number         0  spi_flash.o ABSOLUTE
    startup_ht32f5xxxx_03.s                  0x00000000   Number         0  startup_ht32f5xxxx_03.o ABSOLUTE
    system_ht32f5xxxx_03.c                   0x00000000   Number         0  system_ht32f5xxxx_03.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      356  startup_ht32f5xxxx_03.o(RESET)
    BootProcess                              0x000000cd   Thumb Code    94  startup_ht32f5xxxx_03.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000164   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000164   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000168   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x0000016c   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x0000016c   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x0000016c   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000174   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000174   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000174   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000174   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000178   Section        0  llmul.o(.text)
    .text                                    0x000001a8   Section        0  memcpya.o(.text)
    .text                                    0x000001cc   Section        0  memseta.o(.text)
    .text                                    0x000001f0   Section        0  uidiv_div0.o(.text)
    .text                                    0x00000230   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000254   Section        0  ht32_board.o(.text.HT32F_DVB_LEDToggle)
    __arm_cp.3_0                             0x0000026c   Number         4  ht32_board.o(.text.HT32F_DVB_LEDToggle)
    __arm_cp.3_1                             0x00000270   Number         4  ht32_board.o(.text.HT32F_DVB_LEDToggle)
    __arm_cp.3_2                             0x00000274   Number         4  ht32_board.o(.text.HT32F_DVB_LEDToggle)
    [Anonymous Symbol]                       0x00000280   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000002c0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000002c4   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000002c8   Section        0  port.o(.text.SysTick_Handler)
    __arm_cp.13_0                            0x000002e8   Number         4  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000002ec   Section        0  system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_0                             0x00000368   Number         4  system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_1                             0x0000036c   Number         4  system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_2                             0x00000370   Number         4  system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00000374   Section        0  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_0                             0x000004e0   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_1                             0x000004e4   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_2                             0x000004e8   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_3                             0x000004ec   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000004f0   Section        0  board871.o(.text.Toggle_LED_1)
    [Anonymous Symbol]                       0x000004fa   Section        0  board871.o(.text.Toggle_LED_2)
    [Anonymous Symbol]                       0x00000504   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    __arm_cp.40_0                            0x00000538   Number         4  tasks.o(.text.eTaskConfirmSleepModeStatus)
    __arm_cp.40_1                            0x0000053c   Number         4  tasks.o(.text.eTaskConfirmSleepModeStatus)
    __arm_cp.40_2                            0x00000540   Number         4  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000544   Section        0  main.o(.text.main)
    __arm_cp.4_0                             0x00000598   Number         4  main.o(.text.main)
    __arm_cp.4_2                             0x000005a4   Number         4  main.o(.text.main)
    __arm_cp.4_4                             0x000005b0   Number         4  main.o(.text.main)
    __arm_cp.4_6                             0x000005bc   Number         4  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000005c9   Thumb Code   132  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000005c8   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.4_2                             0x0000064c   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.4_4                             0x00000650   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.4_5                             0x00000654   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvIdleTask                              0x00000659   Thumb Code   204  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00000658   Section        0  tasks.o(.text.prvIdleTask)
    __arm_cp.16_0                            0x00000724   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_1                            0x00000728   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_2                            0x0000072c   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_3                            0x00000730   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_4                            0x00000734   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_5                            0x00000738   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_6                            0x0000073c   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_7                            0x00000740   Number         4  tasks.o(.text.prvIdleTask)
    __arm_cp.16_8                            0x00000744   Number         4  tasks.o(.text.prvIdleTask)
    prvNotifyQueueSetContainer               0x00000749   Thumb Code   166  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00000748   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvSampleTimeNow                         0x000007f1   Thumb Code   148  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000007f0   Section        0  timers.o(.text.prvSampleTimeNow)
    __arm_cp.18_0                            0x00000884   Number         4  timers.o(.text.prvSampleTimeNow)
    prvTaskExitError                         0x00000889   Thumb Code    48  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00000888   Section        0  port.o(.text.prvTaskExitError)
    __arm_cp.1_0                             0x000008b8   Number         4  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x000008bd   Thumb Code   500  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x000008bc   Section        0  timers.o(.text.prvTimerTask)
    __arm_cp.1_0                             0x00000ab0   Number         4  timers.o(.text.prvTimerTask)
    __arm_cp.1_1                             0x00000ab4   Number         4  timers.o(.text.prvTimerTask)
    __arm_cp.1_2                             0x00000ab8   Number         4  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00000abd   Thumb Code   144  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00000abc   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00000b4c   Section        0  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_2                             0x00000ca8   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_3                             0x00000cac   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_5                             0x00000cb0   Number         4  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00000cb4   Section        0  port.o(.text.pxPortInitialiseStack)
    __arm_cp.0_0                             0x00000cd4   Number         4  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00000cd8   Section        0  main.o(.text.task_1)
    [Anonymous Symbol]                       0x00000ce4   Section        0  main.o(.text.task_2)
    [Anonymous Symbol]                       0x00000cf2   Section        0  main.o(.text.task_3)
    [Anonymous Symbol]                       0x00000cfa   Section        0  main.o(.text.task_4)
    [Anonymous Symbol]                       0x00000d02   Section        0  port.o(.text.ulSetInterruptMaskFromISR)
    [Anonymous Symbol]                       0x00000d0a   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00000d2c   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    __arm_cp.21_0                            0x00000d34   Number         4  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00000d38   Section        0  port.o(.text.vClearInterruptMaskFromISR)
    [Anonymous Symbol]                       0x00000d3e   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00000d52   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00000d58   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00000d94   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00000da8   Section        0  port.o(.text.vPortExitCritical)
    __arm_cp.9_0                             0x00000dc0   Number         4  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00000dc4   Section        0  heap_4.o(.text.vPortFree)
    __arm_cp.1_0                             0x00000e4c   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.1_1                             0x00000e50   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.1_2                             0x00000e54   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.1_3                             0x00000e58   Number         4  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00000e5c   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_1                             0x00000e9c   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_3                             0x00000ea0   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    vPortStartFirstTask                      0x00000eb1   Thumb Code    52  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x00000eb0   Section        0  port.o(.text.vPortStartFirstTask)
    pxCurrentTCBConst2                       0x00000ee0   Number         0  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x00000ee4   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    __arm_cp.14_0                            0x00000fd8   Number         4  port.o(.text.vPortSuppressTicksAndSleep)
    __arm_cp.14_1                            0x00000fdc   Number         4  port.o(.text.vPortSuppressTicksAndSleep)
    __arm_cp.14_2                            0x00000fe0   Number         4  port.o(.text.vPortSuppressTicksAndSleep)
    __arm_cp.14_4                            0x00000fe4   Number         4  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00000fe8   Section        0  port.o(.text.vPortYield)
    __arm_cp.7_0                             0x00000ffc   Number         4  port.o(.text.vPortYield)
    [Anonymous Symbol]                       0x00001000   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00001044   Section        0  tasks.o(.text.vTaskDelay)
    __arm_cp.6_3                             0x000010b0   Number         4  tasks.o(.text.vTaskDelay)
    __arm_cp.6_5                             0x000010b4   Number         4  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000010b8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    __arm_cp.35_0                            0x000010c8   Number         4  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000010cc   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000010d4   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000010f4   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0000113c   Section        0  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.15_0                            0x00001188   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.15_1                            0x0000118c   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.15_4                            0x00001198   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.15_6                            0x0000119c   Number         4  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000011a0   Section        0  tasks.o(.text.vTaskStepTick)
    __arm_cp.26_0                            0x000011f0   Number         4  tasks.o(.text.vTaskStepTick)
    __arm_cp.26_1                            0x000011f4   Number         4  tasks.o(.text.vTaskStepTick)
    __arm_cp.26_3                            0x000011f8   Number         4  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000011fc   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00001208   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00001208   Section        0  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.12_0                            0x00001298   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.12_1                            0x0000129c   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.12_2                            0x000012a0   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.12_3                            0x000012a4   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.12_4                            0x000012a8   Number         4  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000012ac   Section        0  port.o(.text.xPortStartScheduler)
    __arm_cp.3_0                             0x00001300   Number         4  port.o(.text.xPortStartScheduler)
    __arm_cp.3_1                             0x00001304   Number         4  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00001308   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000013a0   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x000014d0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    __arm_cp.36_0                            0x00001554   Number         4  tasks.o(.text.xTaskCheckForTimeOut)
    __arm_cp.36_1                            0x00001558   Number         4  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x0000155c   Section        0  tasks.o(.text.xTaskCreate)
    __arm_cp.0_0                             0x00001738   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_1                             0x0000173c   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_4                             0x00001740   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_5                             0x00001744   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_7                             0x00001748   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_8                             0x0000174c   Number         4  tasks.o(.text.xTaskCreate)
    __arm_cp.0_11                            0x00001750   Number         4  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00001754   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    __arm_cp.45_0                            0x0000176c   Number         4  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00001770   Section        0  tasks.o(.text.xTaskGetTickCount)
    __arm_cp.19_0                            0x00001778   Number         4  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x0000177c   Section        0  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.18_1                            0x000018c0   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.18_2                            0x000018c4   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.18_4                            0x000018c8   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.18_5                            0x000018cc   Number         4  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000018d0   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    __arm_cp.47_0                            0x00001940   Number         4  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00001944   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_0                            0x00001a0c   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_1                            0x00001a10   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_2                            0x00001a14   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_3                            0x00001a18   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_4                            0x00001a1c   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.32_6                            0x00001a20   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00001a24   Section        0  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_0                             0x00001b3c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_1                             0x00001b40   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_2                             0x00001b44   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_3                             0x00001b48   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_4                             0x00001b4c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_5                             0x00001b50   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_6                             0x00001b54   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_7                             0x00001b58   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_8                             0x00001b5c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.5_9                             0x00001b60   Number         4  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00001b64   Section        0  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_0                             0x00001bc4   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_1                             0x00001bc8   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_2                             0x00001bcc   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_3                             0x00001bd0   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_4                             0x00001bd4   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_5                             0x00001bd8   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_6                             0x00001bdc   Number         4  timers.o(.text.xTimerCreateTimerTask)
    i.__scatterload_copy                     0x00001be8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001bf6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001bf8   Section       14  handlers.o(i.__scatterload_zeroinit)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    prvSampleTimeNow.xLastTime               0x20000008   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000008   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x2000000c   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000010   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000010   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000014   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000014   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000018   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000018   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x2000001c   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x2000001c   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000020   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000020   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000024   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000024   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000088   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000088   Section        0  heap_4.o(.bss.ucHeap)
    ulStoppedTimerCompensation               0x20002088   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20002088   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x2000208c   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x2000208c   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002090   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002090   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002094   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002094   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002098   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002098   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000209c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000209c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200020a0   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200020a0   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x200020a4   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x200020a4   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x200020b8   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x200020b8   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200020cc   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200020cc   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200020e0   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200020e0   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200020f4   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200020f4   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x200020f8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200020f8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200020fc   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200020fc   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x20002100   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002100   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002104   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002104   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002108   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002108   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x2000210c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x2000210c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002110   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002110   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002114   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002114   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002118   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002118   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000212c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000212c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002130   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002130   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002138   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002138   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x2000214c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2000214c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002160   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002160   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002164   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002164   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002168   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002168   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x2000216c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x2000216c   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20002170   Section      512  startup_ht32f5xxxx_03.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_ht32f5xxxx_03.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x000000c1   Thumb Code    12  startup_ht32f5xxxx_03.o(RESET)
    NMI_Handler                              0x0000012b   Thumb Code     2  startup_ht32f5xxxx_03.o(RESET)
    HardFault_Handler                        0x0000012d   Thumb Code     2  startup_ht32f5xxxx_03.o(RESET)
    ADC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    AES_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_DAC_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EVWUP_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI0_1_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI2_3_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI4_15_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    FLASH_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    GPTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2C0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2C1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2S_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    LVD_BOD_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    MCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH0_1_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH2_5_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    QSPI_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    RTC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCI_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SPI0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SPI1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART0_UART2_IRQHandler                   0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART1_UART3_IRQHandler                   0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USART0_IRQHandler                        0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USART1_IRQHandler                        0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USB_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    __main                                   0x00000165   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000165   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000169   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x0000016d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x0000016d   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x0000016d   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x0000016d   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000175   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000175   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    __aeabi_lmul                             0x00000179   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x00000179   Thumb Code     0  llmul.o(.text)
    __aeabi_memcpy                           0x000001a9   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001a9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001a9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000001cd   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000001cd   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000001cd   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001db   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001db   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001db   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001df   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x000001f1   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x000001f1   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x00000231   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000231   Thumb Code     0  init.o(.text)
    HT32F_DVB_LEDToggle                      0x00000255   Thumb Code    24  ht32_board.o(.text.HT32F_DVB_LEDToggle)
    PendSV_Handler                           0x00000281   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000002c5   Thumb Code     2  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000002c9   Thumb Code    32  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x000002ed   Thumb Code   124  system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00000375   Thumb Code   364  system_ht32f5xxxx_03.o(.text.SystemInit)
    Toggle_LED_1                             0x000004f1   Thumb Code    10  board871.o(.text.Toggle_LED_1)
    Toggle_LED_2                             0x000004fb   Thumb Code    10  board871.o(.text.Toggle_LED_2)
    eTaskConfirmSleepModeStatus              0x00000505   Thumb Code    52  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x00000545   Thumb Code    84  main.o(.text.main)
    pvPortMalloc                             0x00000b4d   Thumb Code   348  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00000cb5   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    task_1                                   0x00000cd9   Thumb Code    12  main.o(.text.task_1)
    task_2                                   0x00000ce5   Thumb Code    14  main.o(.text.task_2)
    task_3                                   0x00000cf3   Thumb Code     8  main.o(.text.task_3)
    task_4                                   0x00000cfb   Thumb Code     8  main.o(.text.task_4)
    ulSetInterruptMaskFromISR                0x00000d03   Thumb Code     8  port.o(.text.ulSetInterruptMaskFromISR)
    uxListRemove                             0x00000d0b   Thumb Code    34  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00000d2d   Thumb Code     8  tasks.o(.text.uxTaskGetNumberOfTasks)
    vClearInterruptMaskFromISR               0x00000d39   Thumb Code     6  port.o(.text.vClearInterruptMaskFromISR)
    vListInitialise                          0x00000d3f   Thumb Code    20  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00000d53   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00000d59   Thumb Code    60  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00000d95   Thumb Code    20  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00000da9   Thumb Code    24  port.o(.text.vPortExitCritical)
    vPortFree                                0x00000dc5   Thumb Code   136  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00000e5d   Thumb Code    64  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00000ee5   Thumb Code   244  port.o(.text.vPortSuppressTicksAndSleep)
    vPortYield                               0x00000fe9   Thumb Code    20  port.o(.text.vPortYield)
    vQueueWaitForMessageRestricted           0x00001001   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00001045   Thumb Code   108  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x000010b9   Thumb Code    16  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000010cd   Thumb Code     8  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000010d5   Thumb Code    32  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x000010f5   Thumb Code    72  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x0000113d   Thumb Code    76  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000011a1   Thumb Code    80  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x000011fd   Thumb Code    12  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001209   Thumb Code   144  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x000012ad   Thumb Code    84  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00001309   Thumb Code   152  queue.o(.text.xQueueGenericCreate)
    xQueueReceive                            0x000013a1   Thumb Code   302  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x000014d1   Thumb Code   132  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x0000155d   Thumb Code   476  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00001755   Thumb Code    24  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00001771   Thumb Code     8  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x0000177d   Thumb Code   324  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000018d1   Thumb Code   112  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001945   Thumb Code   200  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00001a25   Thumb Code   280  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00001b65   Thumb Code    96  timers.o(.text.xTimerCreateTimerTask)
    __scatterload_copy                       0x00001be9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001bf7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001bf9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    GPIO_PORT                                0x00001c08   Data          24  ht32_board.o(.rodata.GPIO_PORT)
    LED_GPIO_ID                              0x00001c20   Data           3  ht32_board.o(.rodata.LED_GPIO_ID)
    LED_GPIO_PIN                             0x00001c24   Data           6  ht32_board.o(.rodata.LED_GPIO_PIN)
    uxTopUsedPriority                        0x00001c2c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00001c30   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001c50   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_ht32f5xxxx_03.o(.data.SystemCoreClock)
    pxCurrentTCB                             0x2000000c   Data           4  tasks.o(.bss.pxCurrentTCB)
    __HT_check_sp                            0x20002170   Data           0  startup_ht32f5xxxx_03.o(STACK)
    __initial_sp                             0x20002370   Data           0  startup_ht32f5xxxx_03.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00001c58, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001c50, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000164   Code   RO           89  * RESET               startup_ht32f5xxxx_03.o
    0x00000164   0x00000164   0x00000000   Code   RO         1794  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x00000164   0x00000164   0x00000004   Code   RO         2076    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x00000168   0x00000168   0x00000004   Code   RO         2079    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         2081    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         2083    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x0000016c   0x0000016c   0x00000008   Code   RO         2084    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         2086    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         2088    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x00000174   0x00000174   0x00000004   Code   RO         2077    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x00000178   0x00000178   0x00000030   Code   RO         1803    .text               mc_p.l(llmul.o)
    0x000001a8   0x000001a8   0x00000024   Code   RO         1805    .text               mc_p.l(memcpya.o)
    0x000001cc   0x000001cc   0x00000024   Code   RO         1807    .text               mc_p.l(memseta.o)
    0x000001f0   0x000001f0   0x0000003e   Code   RO         2095    .text               mc_p.l(uidiv_div0.o)
    0x0000022e   0x0000022e   0x00000002   PAD
    0x00000230   0x00000230   0x00000024   Code   RO         2114    .text               mc_p.l(init.o)
    0x00000254   0x00000254   0x00000024   Code   RO         1280    .text.HT32F_DVB_LEDToggle  ht32_board.o
    0x00000278   0x00000278   0x00000008   PAD
    0x00000280   0x00000280   0x00000044   Code   RO         1475    .text.PendSV_Handler  port.o
    0x000002c4   0x000002c4   0x00000002   Code   RO         1455    .text.SVC_Handler   port.o
    0x000002c6   0x000002c6   0x00000002   PAD
    0x000002c8   0x000002c8   0x00000024   Code   RO         1477    .text.SysTick_Handler  port.o
    0x000002ec   0x000002ec   0x00000088   Code   RO           77    .text.SystemCoreClockUpdate  system_ht32f5xxxx_03.o
    0x00000374   0x00000374   0x0000017c   Code   RO           75    .text.SystemInit    system_ht32f5xxxx_03.o
    0x000004f0   0x000004f0   0x0000000a   Code   RO           55    .text.Toggle_LED_1  board871.o
    0x000004fa   0x000004fa   0x0000000a   Code   RO           57    .text.Toggle_LED_2  board871.o
    0x00000504   0x00000504   0x00000040   Code   RO         1676    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000544   0x00000544   0x00000084   Code   RO           31    .text.main          main.o
    0x000005c8   0x000005c8   0x00000090   Code   RO         1604    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000658   0x00000658   0x000000f0   Code   RO         1628    .text.prvIdleTask   tasks.o
    0x00000748   0x00000748   0x000000a6   Code   RO         1542    .text.prvNotifyQueueSetContainer  queue.o
    0x000007ee   0x000007ee   0x00000002   PAD
    0x000007f0   0x000007f0   0x00000098   Code   RO         1778    .text.prvSampleTimeNow  timers.o
    0x00000888   0x00000888   0x00000034   Code   RO         1453    .text.prvTaskExitError  port.o
    0x000008bc   0x000008bc   0x00000200   Code   RO         1744    .text.prvTimerTask  timers.o
    0x00000abc   0x00000abc   0x00000090   Code   RO         1544    .text.prvUnlockQueue  queue.o
    0x00000b4c   0x00000b4c   0x00000168   Code   RO         1493    .text.pvPortMalloc  heap_4.o
    0x00000cb4   0x00000cb4   0x00000024   Code   RO         1451    .text.pxPortInitialiseStack  port.o
    0x00000cd8   0x00000cd8   0x0000000c   Code   RO           23    .text.task_1        main.o
    0x00000ce4   0x00000ce4   0x0000000e   Code   RO           25    .text.task_2        main.o
    0x00000cf2   0x00000cf2   0x00000008   Code   RO           27    .text.task_3        main.o
    0x00000cfa   0x00000cfa   0x00000008   Code   RO           29    .text.task_4        main.o
    0x00000d02   0x00000d02   0x00000008   Code   RO         1471    .text.ulSetInterruptMaskFromISR  port.o
    0x00000d0a   0x00000d0a   0x00000022   Code   RO         1441    .text.uxListRemove  list.o
    0x00000d2c   0x00000d2c   0x0000000c   Code   RO         1638    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00000d38   0x00000d38   0x00000006   Code   RO         1473    .text.vClearInterruptMaskFromISR  port.o
    0x00000d3e   0x00000d3e   0x00000014   Code   RO         1433    .text.vListInitialise  list.o
    0x00000d52   0x00000d52   0x00000006   Code   RO         1435    .text.vListInitialiseItem  list.o
    0x00000d58   0x00000d58   0x0000003c   Code   RO         1439    .text.vListInsert   list.o
    0x00000d94   0x00000d94   0x00000014   Code   RO         1467    .text.vPortEnterCritical  port.o
    0x00000da8   0x00000da8   0x0000001c   Code   RO         1469    .text.vPortExitCritical  port.o
    0x00000dc4   0x00000dc4   0x00000098   Code   RO         1495    .text.vPortFree     heap_4.o
    0x00000e5c   0x00000e5c   0x00000048   Code   RO         1459    .text.vPortSetupTimerInterrupt  port.o
    0x00000ea4   0x00000ea4   0x0000000c   PAD
    0x00000eb0   0x00000eb0   0x00000034   Code   RO         1461    .text.vPortStartFirstTask  port.o
    0x00000ee4   0x00000ee4   0x00000104   Code   RO         1479    .text.vPortSuppressTicksAndSleep  port.o
    0x00000fe8   0x00000fe8   0x00000018   Code   RO         1465    .text.vPortYield    port.o
    0x00001000   0x00001000   0x00000044   Code   RO         1576    .text.vQueueWaitForMessageRestricted  queue.o
    0x00001044   0x00001044   0x00000074   Code   RO         1608    .text.vTaskDelay    tasks.o
    0x000010b8   0x000010b8   0x00000014   Code   RO         1666    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000010cc   0x000010cc   0x00000008   Code   RO         1670    .text.vTaskMissedYield  tasks.o
    0x000010d4   0x000010d4   0x00000020   Code   RO         1654    .text.vTaskPlaceOnEventList  tasks.o
    0x000010f4   0x000010f4   0x00000048   Code   RO         1658    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000113c   0x0000113c   0x00000064   Code   RO         1626    .text.vTaskStartScheduler  tasks.o
    0x000011a0   0x000011a0   0x0000005c   Code   RO         1648    .text.vTaskStepTick  tasks.o
    0x000011fc   0x000011fc   0x0000000c   Code   RO         1602    .text.vTaskSuspendAll  tasks.o
    0x00001208   0x00001208   0x000000a4   Code   RO         1620    .text.vTaskSwitchContext  tasks.o
    0x000012ac   0x000012ac   0x0000005c   Code   RO         1457    .text.xPortStartScheduler  port.o
    0x00001308   0x00001308   0x00000098   Code   RO         1524    .text.xQueueGenericCreate  queue.o
    0x000013a0   0x000013a0   0x0000012e   Code   RO         1550    .text.xQueueReceive  queue.o
    0x000014ce   0x000014ce   0x00000002   PAD
    0x000014d0   0x000014d0   0x0000008c   Code   RO         1668    .text.xTaskCheckForTimeOut  tasks.o
    0x0000155c   0x0000155c   0x000001f8   Code   RO         1596    .text.xTaskCreate   tasks.o
    0x00001754   0x00001754   0x0000001c   Code   RO         1686    .text.xTaskGetSchedulerState  tasks.o
    0x00001770   0x00001770   0x0000000c   Code   RO         1634    .text.xTaskGetTickCount  tasks.o
    0x0000177c   0x0000177c   0x00000154   Code   RO         1632    .text.xTaskIncrementTick  tasks.o
    0x000018d0   0x000018d0   0x00000074   Code   RO         1690    .text.xTaskPriorityDisinherit  tasks.o
    0x00001944   0x00001944   0x000000e0   Code   RO         1660    .text.xTaskRemoveFromEventList  tasks.o
    0x00001a24   0x00001a24   0x00000140   Code   RO         1606    .text.xTaskResumeAll  tasks.o
    0x00001b64   0x00001b64   0x00000084   Code   RO         1742    .text.xTimerCreateTimerTask  timers.o
    0x00001be8   0x00001be8   0x0000000e   Code   RO         2128    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00001bf6   0x00001bf6   0x00000002   Code   RO         2129    i.__scatterload_null  mc_p.l(handlers.o)
    0x00001bf8   0x00001bf8   0x0000000e   Code   RO         2130    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00001c06   0x00001c06   0x00000002   PAD
    0x00001c08   0x00001c08   0x00000018   Data   RO         1292    .rodata.GPIO_PORT   ht32_board.o
    0x00001c20   0x00001c20   0x00000003   Data   RO         1293    .rodata.LED_GPIO_ID  ht32_board.o
    0x00001c23   0x00001c23   0x00000001   PAD
    0x00001c24   0x00001c24   0x00000006   Data   RO         1294    .rodata.LED_GPIO_PIN  ht32_board.o
    0x00001c2a   0x00001c2a   0x00000002   PAD
    0x00001c2c   0x00001c2c   0x00000004   Data   RO         1713    .rodata.uxTopUsedPriority  tasks.o
    0x00001c30   0x00001c30   0x00000020   Data   RO         2127    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001c50, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001c50   0x00000004   Data   RW           79    .data.SystemCoreClock  system_ht32f5xxxx_03.o
    0x20000004   0x00001c54   0x00000004   Data   RW         1481    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x00001c58, Size: 0x00002368, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000004   Zero   RW         1784    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x2000000c        -       0x00000004   Zero   RW         1712    .bss.pxCurrentTCB   tasks.o
    0x20000010        -       0x00000004   Zero   RW         1782    .bss.pxCurrentTimerList  timers.o
    0x20000014        -       0x00000004   Zero   RW         1721    .bss.pxDelayedTaskList  tasks.o
    0x20000018        -       0x00000004   Zero   RW         1507    .bss.pxEnd          heap_4.o
    0x2000001c        -       0x00000004   Zero   RW         1722    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000020        -       0x00000004   Zero   RW         1783    .bss.pxOverflowTimerList  timers.o
    0x20000024        -       0x00000064   Zero   RW         1724    .bss.pxReadyTasksLists  tasks.o
    0x20000088        -       0x00002000   Zero   RW         1513    .bss.ucHeap         heap_4.o
    0x20002088        -       0x00000001   Zero   RW         1484    .bss.ulStoppedTimerCompensation  port.o
    0x20002089   0x00001c58   0x00000003   PAD
    0x2000208c        -       0x00000004   Zero   RW         1482    .bss.ulTimerCountsForOneTick  port.o
    0x20002090        -       0x00000004   Zero   RW         1717    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002094        -       0x00000004   Zero   RW         1716    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002098        -       0x00000004   Zero   RW         1719    .bss.uxSchedulerSuspended  tasks.o
    0x2000209c        -       0x00000004   Zero   RW         1714    .bss.uxTaskNumber   tasks.o
    0x200020a0        -       0x00000004   Zero   RW         1725    .bss.uxTopReadyPriority  tasks.o
    0x200020a4        -       0x00000014   Zero   RW         1785    .bss.xActiveTimerList1  timers.o
    0x200020b8        -       0x00000014   Zero   RW         1786    .bss.xActiveTimerList2  timers.o
    0x200020cc        -       0x00000014   Zero   RW         1732    .bss.xDelayedTaskList1  tasks.o
    0x200020e0        -       0x00000014   Zero   RW         1733    .bss.xDelayedTaskList2  tasks.o
    0x200020f4        -       0x00000004   Zero   RW         1508    .bss.xFreeBytesRemaining  heap_4.o
    0x200020f8        -       0x00000004   Zero   RW         1728    .bss.xIdleTaskHandle  tasks.o
    0x200020fc        -       0x00000004   Zero   RW         1483    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20002100        -       0x00000004   Zero   RW         1510    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002104        -       0x00000004   Zero   RW         1729    .bss.xNextTaskUnblockTime  tasks.o
    0x20002108        -       0x00000004   Zero   RW         1731    .bss.xNumOfOverflows  tasks.o
    0x2000210c        -       0x00000004   Zero   RW         1511    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002110        -       0x00000004   Zero   RW         1512    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002114        -       0x00000004   Zero   RW         1730    .bss.xPendedTicks   tasks.o
    0x20002118        -       0x00000014   Zero   RW         1727    .bss.xPendingReadyList  tasks.o
    0x2000212c        -       0x00000004   Zero   RW         1718    .bss.xSchedulerRunning  tasks.o
    0x20002130        -       0x00000008   Zero   RW         1509    .bss.xStart         heap_4.o
    0x20002138        -       0x00000014   Zero   RW         1723    .bss.xSuspendedTaskList  tasks.o
    0x2000214c        -       0x00000014   Zero   RW         1715    .bss.xTasksWaitingTermination  tasks.o
    0x20002160        -       0x00000004   Zero   RW         1720    .bss.xTickCount     tasks.o
    0x20002164        -       0x00000004   Zero   RW         1780    .bss.xTimerQueue    timers.o
    0x20002168        -       0x00000004   Zero   RW         1781    .bss.xTimerTaskHandle  timers.o
    0x2000216c        -       0x00000004   Zero   RW         1726    .bss.xYieldPending  tasks.o
    0x20002170        -       0x00000200   Zero   RW           87    STACK               startup_ht32f5xxxx_03.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        20          0          0          0          0       5204   board871.o
       512         28          0          0       8220       5245   heap_4.o
        36         12         33          0          0      12637   ht32_board.o
       120          0          0          0          0       2431   list.o
       174         48          0          0          0       1593   main.o
       756         60          0          4          9       4290   port.o
       832          0          0          0          0      22742   queue.o
       356        238          0          0        512        732   startup_ht32f5xxxx_03.o
       516         36          0          4          0       3064   system_ht32f5xxxx_03.o
      2760        260          4          0        260      44203   tasks.o
       796         62          0          0         60      13654   timers.o

    ----------------------------------------------------------------------
      6904        764         72          8       9064     115795   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        26         20          3          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        48          0          0          0          0         72   llmul.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       272         16          0          0          0        372   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       268         16          0          0          0        372   mc_p.l

    ----------------------------------------------------------------------
       272         16          0          0          0        372   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7176        780         72          8       9064     116051   Grand Totals
      7176        780         72          8       9064     116051   ELF Image Totals
      7176        780         72          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7248 (   7.08kB)
    Total RW  Size (RW Data + ZI Data)              9072 (   8.86kB)
    Total ROM Size (Code + RO Data + RW Data)       7256 (   7.09kB)

==============================================================================

